import cfa from"https://esm.sh/cf-alert";import{ethers}from"https://esm.sh/ethers";const hamburger=document.querySelector("#hamburger"),nav=document.querySelector("nav"),newProjForm=document.querySelector("#new-project-form"),newBucketForm=document.querySelector("#new-bucket-form"),newFileForm=document.querySelector("#new-file-form"),newProjName=document.querySelector("#new-proj-name"),newBucketName=document.querySelector("#new-bucket-name"),bucketProjectId=document.querySelector("#bucket-form-project-id"),seedPhrase=document.querySelector("#seed-phrase"),bucketIdField=document.querySelector("#bucket-id"),projectIdField=document.querySelector("#file-form-project-id"),toUpload=document.querySelector("#to-upload"),web3signIn=document.querySelector("#web3-sign-in");web3signIn.addEventListener("click",async()=>{const provider=new ethers.providers.Web3Provider(window.ethereum);await provider.send("eth_requestAccounts",[]);const signer=provider.getSigner(),address=await signer.getAddress();document.getElementById("address").innerHTML=address}),newProjForm.onsubmit=async e=>{e.preventDefault();const result=await jsonRequest("/",{name:newProjName.value,seed_phrase:seedPhrase.value});cfa.message(`Created project with id ${result.id} ðŸŽ‰`)},newBucketForm.onsubmit=async e=>{e.preventDefault();const path=`/${bucketProjectId.value}`,result=await jsonRequest(path,{name:newBucketName.value});cfa.message(`Created bucket with id ${result.id} ðŸŽ‰`)},newFileForm.onsubmit=async e=>{e.preventDefault();const path=`/${projectIdField.value}/${bucketIdField.value}`,file=toUpload.files[0],data=new FormData;data.append("file",file),data.append("fileName",document.querySelector("#file-name").value);const{cid:cid}=await fetch(path,{method:"POST",body:data}).then(r=>r.json());cfa.message(`Uploaded file. You can view it at ipfs://${cid}`)},window.addEventListener("DOMContentLoaded",()=>{hamburger.addEventListener("click",()=>{"none"===window.getComputedStyle(nav).display?nav.style.display="flex":nav.style.display="none"})}),window.addEventListener("resize",()=>{nav.style.display=window.innerWidth/window.innerHeight>1?"flex":"none"});const jsonRequest=(url,data,method="POST")=>fetch(url,{method:method,headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(data)}).then(response=>response.json());